// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: edge_cmd.proto

package edge_cmd_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_Zero                     CommandType = 0
	CommandType_CreateEdgeTerminatorType CommandType = 1000
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0:    "Zero",
		1000: "CreateEdgeTerminatorType",
	}
	CommandType_value = map[string]int32{
		"Zero":                     0,
		"CreateEdgeTerminatorType": 1000,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_edge_cmd_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_edge_cmd_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{0}
}

type CreateEdgeTerminatorCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerminatorData []byte `protobuf:"bytes,1,opt,name=terminatorData,proto3" json:"terminatorData,omitempty"`
}

func (x *CreateEdgeTerminatorCommand) Reset() {
	*x = CreateEdgeTerminatorCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEdgeTerminatorCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEdgeTerminatorCommand) ProtoMessage() {}

func (x *CreateEdgeTerminatorCommand) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEdgeTerminatorCommand.ProtoReflect.Descriptor instead.
func (*CreateEdgeTerminatorCommand) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEdgeTerminatorCommand) GetTerminatorData() []byte {
	if x != nil {
		return x.TerminatorData
	}
	return nil
}

type TagValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*TagValue_BoolValue
	//	*TagValue_StringValue
	//	*TagValue_FpValue
	//	*TagValue_NilValue
	Value isTagValue_Value `protobuf_oneof:"value"`
}

func (x *TagValue) Reset() {
	*x = TagValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagValue) ProtoMessage() {}

func (x *TagValue) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagValue.ProtoReflect.Descriptor instead.
func (*TagValue) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{1}
}

func (m *TagValue) GetValue() isTagValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TagValue) GetBoolValue() bool {
	if x, ok := x.GetValue().(*TagValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *TagValue) GetStringValue() string {
	if x, ok := x.GetValue().(*TagValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *TagValue) GetFpValue() float64 {
	if x, ok := x.GetValue().(*TagValue_FpValue); ok {
		return x.FpValue
	}
	return 0
}

func (x *TagValue) GetNilValue() bool {
	if x, ok := x.GetValue().(*TagValue_NilValue); ok {
		return x.NilValue
	}
	return false
}

type isTagValue_Value interface {
	isTagValue_Value()
}

type TagValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=boolValue,proto3,oneof"`
}

type TagValue_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=stringValue,proto3,oneof"`
}

type TagValue_FpValue struct {
	FpValue float64 `protobuf:"fixed64,3,opt,name=fpValue,proto3,oneof"`
}

type TagValue_NilValue struct {
	NilValue bool `protobuf:"varint,4,opt,name=nilValue,proto3,oneof"`
}

func (*TagValue_BoolValue) isTagValue_Value() {}

func (*TagValue_StringValue) isTagValue_Value() {}

func (*TagValue_FpValue) isTagValue_Value() {}

func (*TagValue_NilValue) isTagValue_Value() {}

type JsonMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]*JsonValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JsonMap) Reset() {
	*x = JsonMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonMap) ProtoMessage() {}

func (x *JsonMap) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonMap.ProtoReflect.Descriptor instead.
func (*JsonMap) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{2}
}

func (x *JsonMap) GetValue() map[string]*JsonValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type JsonValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*JsonValue_BoolValue
	//	*JsonValue_StringValue
	//	*JsonValue_FpValue
	//	*JsonValue_NilValue
	//	*JsonValue_MapValue
	Value isJsonValue_Value `protobuf_oneof:"value"`
}

func (x *JsonValue) Reset() {
	*x = JsonValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonValue) ProtoMessage() {}

func (x *JsonValue) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonValue.ProtoReflect.Descriptor instead.
func (*JsonValue) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{3}
}

func (m *JsonValue) GetValue() isJsonValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *JsonValue) GetBoolValue() bool {
	if x, ok := x.GetValue().(*JsonValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *JsonValue) GetStringValue() string {
	if x, ok := x.GetValue().(*JsonValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *JsonValue) GetFpValue() float64 {
	if x, ok := x.GetValue().(*JsonValue_FpValue); ok {
		return x.FpValue
	}
	return 0
}

func (x *JsonValue) GetNilValue() bool {
	if x, ok := x.GetValue().(*JsonValue_NilValue); ok {
		return x.NilValue
	}
	return false
}

func (x *JsonValue) GetMapValue() *JsonMap {
	if x, ok := x.GetValue().(*JsonValue_MapValue); ok {
		return x.MapValue
	}
	return nil
}

type isJsonValue_Value interface {
	isJsonValue_Value()
}

type JsonValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,1,opt,name=boolValue,proto3,oneof"`
}

type JsonValue_StringValue struct {
	StringValue string `protobuf:"bytes,2,opt,name=stringValue,proto3,oneof"`
}

type JsonValue_FpValue struct {
	FpValue float64 `protobuf:"fixed64,3,opt,name=fpValue,proto3,oneof"`
}

type JsonValue_NilValue struct {
	NilValue bool `protobuf:"varint,4,opt,name=nilValue,proto3,oneof"`
}

type JsonValue_MapValue struct {
	MapValue *JsonMap `protobuf:"bytes,5,opt,name=mapValue,proto3,oneof"`
}

func (*JsonValue_BoolValue) isJsonValue_Value() {}

func (*JsonValue_StringValue) isJsonValue_Value() {}

func (*JsonValue_FpValue) isJsonValue_Value() {}

func (*JsonValue_NilValue) isJsonValue_Value() {}

func (*JsonValue_MapValue) isJsonValue_Value() {}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ConfigTypeId string               `protobuf:"bytes,3,opt,name=configTypeId,proto3" json:"configTypeId,omitempty"`
	Data         *JsonMap             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Tags         map[string]*TagValue `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{4}
}

func (x *Config) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Config) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config) GetConfigTypeId() string {
	if x != nil {
		return x.ConfigTypeId
	}
	return ""
}

func (x *Config) GetData() *JsonMap {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Config) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ConfigType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Schema *JsonMap             `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Tags   map[string]*TagValue `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConfigType) Reset() {
	*x = ConfigType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigType) ProtoMessage() {}

func (x *ConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigType.ProtoReflect.Descriptor instead.
func (*ConfigType) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigType) GetSchema() *JsonMap {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ConfigType) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AuthPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Primary   *AuthPolicy_Primary   `protobuf:"bytes,3,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary *AuthPolicy_Secondary `protobuf:"bytes,4,opt,name=secondary,proto3" json:"secondary,omitempty"`
	Tags      map[string]*TagValue  `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuthPolicy) Reset() {
	*x = AuthPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy) ProtoMessage() {}

func (x *AuthPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy.ProtoReflect.Descriptor instead.
func (*AuthPolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6}
}

func (x *AuthPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthPolicy) GetPrimary() *AuthPolicy_Primary {
	if x != nil {
		return x.Primary
	}
	return nil
}

func (x *AuthPolicy) GetSecondary() *AuthPolicy_Secondary {
	if x != nil {
		return x.Secondary
	}
	return nil
}

func (x *AuthPolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Ca struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags                      map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Fingerprint               string               `protobuf:"bytes,4,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	CertPem                   string               `protobuf:"bytes,5,opt,name=certPem,proto3" json:"certPem,omitempty"`
	IsVerified                bool                 `protobuf:"varint,6,opt,name=isVerified,proto3" json:"isVerified,omitempty"`
	VerificationToken         string               `protobuf:"bytes,7,opt,name=verificationToken,proto3" json:"verificationToken,omitempty"`
	IsAutoCaEnrollmentEnabled bool                 `protobuf:"varint,8,opt,name=isAutoCaEnrollmentEnabled,proto3" json:"isAutoCaEnrollmentEnabled,omitempty"`
	IsOttCaEnrollmentEnabled  bool                 `protobuf:"varint,9,opt,name=isOttCaEnrollmentEnabled,proto3" json:"isOttCaEnrollmentEnabled,omitempty"`
	IsAuthEnabled             bool                 `protobuf:"varint,10,opt,name=isAuthEnabled,proto3" json:"isAuthEnabled,omitempty"`
	IdentityRoles             []string             `protobuf:"bytes,11,rep,name=identityRoles,proto3" json:"identityRoles,omitempty"`
	IdentityNameFormat        string               `protobuf:"bytes,12,opt,name=identityNameFormat,proto3" json:"identityNameFormat,omitempty"`
	ExternalIdClaim           *Ca_ExternalIdClaim  `protobuf:"bytes,13,opt,name=externalIdClaim,proto3,oneof" json:"externalIdClaim,omitempty"`
}

func (x *Ca) Reset() {
	*x = Ca{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ca) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ca) ProtoMessage() {}

func (x *Ca) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ca.ProtoReflect.Descriptor instead.
func (*Ca) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7}
}

func (x *Ca) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ca) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ca) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Ca) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Ca) GetCertPem() string {
	if x != nil {
		return x.CertPem
	}
	return ""
}

func (x *Ca) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Ca) GetVerificationToken() string {
	if x != nil {
		return x.VerificationToken
	}
	return ""
}

func (x *Ca) GetIsAutoCaEnrollmentEnabled() bool {
	if x != nil {
		return x.IsAutoCaEnrollmentEnabled
	}
	return false
}

func (x *Ca) GetIsOttCaEnrollmentEnabled() bool {
	if x != nil {
		return x.IsOttCaEnrollmentEnabled
	}
	return false
}

func (x *Ca) GetIsAuthEnabled() bool {
	if x != nil {
		return x.IsAuthEnabled
	}
	return false
}

func (x *Ca) GetIdentityRoles() []string {
	if x != nil {
		return x.IdentityRoles
	}
	return nil
}

func (x *Ca) GetIdentityNameFormat() string {
	if x != nil {
		return x.IdentityNameFormat
	}
	return ""
}

func (x *Ca) GetExternalIdClaim() *Ca_ExternalIdClaim {
	if x != nil {
		return x.ExternalIdClaim
	}
	return nil
}

type EdgeRouterPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Semantic        string               `protobuf:"bytes,4,opt,name=semantic,proto3" json:"semantic,omitempty"`
	EdgeRouterRoles []string             `protobuf:"bytes,5,rep,name=edgeRouterRoles,proto3" json:"edgeRouterRoles,omitempty"`
	IdentityRoles   []string             `protobuf:"bytes,6,rep,name=identityRoles,proto3" json:"identityRoles,omitempty"`
}

func (x *EdgeRouterPolicy) Reset() {
	*x = EdgeRouterPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeRouterPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeRouterPolicy) ProtoMessage() {}

func (x *EdgeRouterPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeRouterPolicy.ProtoReflect.Descriptor instead.
func (*EdgeRouterPolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{8}
}

func (x *EdgeRouterPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EdgeRouterPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EdgeRouterPolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EdgeRouterPolicy) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *EdgeRouterPolicy) GetEdgeRouterRoles() []string {
	if x != nil {
		return x.EdgeRouterRoles
	}
	return nil
}

func (x *EdgeRouterPolicy) GetIdentityRoles() []string {
	if x != nil {
		return x.IdentityRoles
	}
	return nil
}

type ExternalJwtSigner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            map[string]*TagValue   `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CertPem         *string                `protobuf:"bytes,4,opt,name=certPem,proto3,oneof" json:"certPem,omitempty"`
	JwksEndpoint    *string                `protobuf:"bytes,5,opt,name=jwksEndpoint,proto3,oneof" json:"jwksEndpoint,omitempty"`
	Kid             *string                `protobuf:"bytes,6,opt,name=kid,proto3,oneof" json:"kid,omitempty"`
	Enabled         bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ExternalAuthUrl *string                `protobuf:"bytes,8,opt,name=externalAuthUrl,proto3,oneof" json:"externalAuthUrl,omitempty"`
	UseExternalId   bool                   `protobuf:"varint,9,opt,name=useExternalId,proto3" json:"useExternalId,omitempty"`
	ClaimsProperty  *string                `protobuf:"bytes,10,opt,name=claimsProperty,proto3,oneof" json:"claimsProperty,omitempty"`
	Issuer          *string                `protobuf:"bytes,11,opt,name=issuer,proto3,oneof" json:"issuer,omitempty"`
	Audience        *string                `protobuf:"bytes,12,opt,name=audience,proto3,oneof" json:"audience,omitempty"`
	CommonName      string                 `protobuf:"bytes,13,opt,name=commonName,proto3" json:"commonName,omitempty"`
	Fingerprint     *string                `protobuf:"bytes,14,opt,name=fingerprint,proto3,oneof" json:"fingerprint,omitempty"`
	NotAfter        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	NotBefore       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=notBefore,proto3" json:"notBefore,omitempty"`
}

func (x *ExternalJwtSigner) Reset() {
	*x = ExternalJwtSigner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalJwtSigner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalJwtSigner) ProtoMessage() {}

func (x *ExternalJwtSigner) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalJwtSigner.ProtoReflect.Descriptor instead.
func (*ExternalJwtSigner) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalJwtSigner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExternalJwtSigner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalJwtSigner) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ExternalJwtSigner) GetCertPem() string {
	if x != nil && x.CertPem != nil {
		return *x.CertPem
	}
	return ""
}

func (x *ExternalJwtSigner) GetJwksEndpoint() string {
	if x != nil && x.JwksEndpoint != nil {
		return *x.JwksEndpoint
	}
	return ""
}

func (x *ExternalJwtSigner) GetKid() string {
	if x != nil && x.Kid != nil {
		return *x.Kid
	}
	return ""
}

func (x *ExternalJwtSigner) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ExternalJwtSigner) GetExternalAuthUrl() string {
	if x != nil && x.ExternalAuthUrl != nil {
		return *x.ExternalAuthUrl
	}
	return ""
}

func (x *ExternalJwtSigner) GetUseExternalId() bool {
	if x != nil {
		return x.UseExternalId
	}
	return false
}

func (x *ExternalJwtSigner) GetClaimsProperty() string {
	if x != nil && x.ClaimsProperty != nil {
		return *x.ClaimsProperty
	}
	return ""
}

func (x *ExternalJwtSigner) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *ExternalJwtSigner) GetAudience() string {
	if x != nil && x.Audience != nil {
		return *x.Audience
	}
	return ""
}

func (x *ExternalJwtSigner) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *ExternalJwtSigner) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *ExternalJwtSigner) GetNotAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.NotAfter
	}
	return nil
}

func (x *ExternalJwtSigner) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

type ServiceEdgeRouterPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags            map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Semantic        string               `protobuf:"bytes,4,opt,name=semantic,proto3" json:"semantic,omitempty"`
	EdgeRouterRoles []string             `protobuf:"bytes,5,rep,name=edgeRouterRoles,proto3" json:"edgeRouterRoles,omitempty"`
	ServiceRoles    []string             `protobuf:"bytes,6,rep,name=serviceRoles,proto3" json:"serviceRoles,omitempty"`
}

func (x *ServiceEdgeRouterPolicy) Reset() {
	*x = ServiceEdgeRouterPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceEdgeRouterPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEdgeRouterPolicy) ProtoMessage() {}

func (x *ServiceEdgeRouterPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEdgeRouterPolicy.ProtoReflect.Descriptor instead.
func (*ServiceEdgeRouterPolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceEdgeRouterPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceEdgeRouterPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceEdgeRouterPolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ServiceEdgeRouterPolicy) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *ServiceEdgeRouterPolicy) GetEdgeRouterRoles() []string {
	if x != nil {
		return x.EdgeRouterRoles
	}
	return nil
}

func (x *ServiceEdgeRouterPolicy) GetServiceRoles() []string {
	if x != nil {
		return x.ServiceRoles
	}
	return nil
}

type ServicePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags              map[string]*TagValue `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Semantic          string               `protobuf:"bytes,4,opt,name=semantic,proto3" json:"semantic,omitempty"`
	IdentityRoles     []string             `protobuf:"bytes,5,rep,name=identityRoles,proto3" json:"identityRoles,omitempty"`
	ServiceRoles      []string             `protobuf:"bytes,6,rep,name=serviceRoles,proto3" json:"serviceRoles,omitempty"`
	PostureCheckRoles []string             `protobuf:"bytes,7,rep,name=postureCheckRoles,proto3" json:"postureCheckRoles,omitempty"`
	PolicyType        string               `protobuf:"bytes,8,opt,name=policyType,proto3" json:"policyType,omitempty"`
}

func (x *ServicePolicy) Reset() {
	*x = ServicePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePolicy) ProtoMessage() {}

func (x *ServicePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePolicy.ProtoReflect.Descriptor instead.
func (*ServicePolicy) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{11}
}

func (x *ServicePolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServicePolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServicePolicy) GetTags() map[string]*TagValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ServicePolicy) GetSemantic() string {
	if x != nil {
		return x.Semantic
	}
	return ""
}

func (x *ServicePolicy) GetIdentityRoles() []string {
	if x != nil {
		return x.IdentityRoles
	}
	return nil
}

func (x *ServicePolicy) GetServiceRoles() []string {
	if x != nil {
		return x.ServiceRoles
	}
	return nil
}

func (x *ServicePolicy) GetPostureCheckRoles() []string {
	if x != nil {
		return x.PostureCheckRoles
	}
	return nil
}

func (x *ServicePolicy) GetPolicyType() string {
	if x != nil {
		return x.PolicyType
	}
	return ""
}

type AuthPolicy_Primary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert   *AuthPolicy_Primary_Cert   `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Updb   *AuthPolicy_Primary_Updb   `protobuf:"bytes,2,opt,name=updb,proto3" json:"updb,omitempty"`
	ExtJwt *AuthPolicy_Primary_ExtJwt `protobuf:"bytes,3,opt,name=extJwt,proto3" json:"extJwt,omitempty"`
}

func (x *AuthPolicy_Primary) Reset() {
	*x = AuthPolicy_Primary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary) ProtoMessage() {}

func (x *AuthPolicy_Primary) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AuthPolicy_Primary) GetCert() *AuthPolicy_Primary_Cert {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *AuthPolicy_Primary) GetUpdb() *AuthPolicy_Primary_Updb {
	if x != nil {
		return x.Updb
	}
	return nil
}

func (x *AuthPolicy_Primary) GetExtJwt() *AuthPolicy_Primary_ExtJwt {
	if x != nil {
		return x.ExtJwt
	}
	return nil
}

type AuthPolicy_Secondary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequireTotp          bool    `protobuf:"varint,1,opt,name=requireTotp,proto3" json:"requireTotp,omitempty"`
	RequiredExtJwtSigner *string `protobuf:"bytes,2,opt,name=requiredExtJwtSigner,proto3,oneof" json:"requiredExtJwtSigner,omitempty"`
}

func (x *AuthPolicy_Secondary) Reset() {
	*x = AuthPolicy_Secondary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Secondary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Secondary) ProtoMessage() {}

func (x *AuthPolicy_Secondary) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Secondary.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Secondary) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 1}
}

func (x *AuthPolicy_Secondary) GetRequireTotp() bool {
	if x != nil {
		return x.RequireTotp
	}
	return false
}

func (x *AuthPolicy_Secondary) GetRequiredExtJwtSigner() string {
	if x != nil && x.RequiredExtJwtSigner != nil {
		return *x.RequiredExtJwtSigner
	}
	return ""
}

type AuthPolicy_Primary_Cert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed           bool `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	AllowExpiredCerts bool `protobuf:"varint,2,opt,name=allowExpiredCerts,proto3" json:"allowExpiredCerts,omitempty"`
}

func (x *AuthPolicy_Primary_Cert) Reset() {
	*x = AuthPolicy_Primary_Cert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary_Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary_Cert) ProtoMessage() {}

func (x *AuthPolicy_Primary_Cert) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary_Cert.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary_Cert) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *AuthPolicy_Primary_Cert) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthPolicy_Primary_Cert) GetAllowExpiredCerts() bool {
	if x != nil {
		return x.AllowExpiredCerts
	}
	return false
}

type AuthPolicy_Primary_Updb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed                bool  `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	MinPasswordLength      int64 `protobuf:"varint,2,opt,name=MinPasswordLength,proto3" json:"MinPasswordLength,omitempty"`
	RequireSpecialChar     bool  `protobuf:"varint,3,opt,name=RequireSpecialChar,proto3" json:"RequireSpecialChar,omitempty"`
	RequireNumberChar      bool  `protobuf:"varint,4,opt,name=requireNumberChar,proto3" json:"requireNumberChar,omitempty"`
	RequireMixedCase       bool  `protobuf:"varint,5,opt,name=RequireMixedCase,proto3" json:"RequireMixedCase,omitempty"`
	MaxAttempts            int64 `protobuf:"varint,6,opt,name=MaxAttempts,proto3" json:"MaxAttempts,omitempty"`
	LockoutDurationMinutes int64 `protobuf:"varint,7,opt,name=LockoutDurationMinutes,proto3" json:"LockoutDurationMinutes,omitempty"`
}

func (x *AuthPolicy_Primary_Updb) Reset() {
	*x = AuthPolicy_Primary_Updb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary_Updb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary_Updb) ProtoMessage() {}

func (x *AuthPolicy_Primary_Updb) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary_Updb.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary_Updb) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 0, 1}
}

func (x *AuthPolicy_Primary_Updb) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetMinPasswordLength() int64 {
	if x != nil {
		return x.MinPasswordLength
	}
	return 0
}

func (x *AuthPolicy_Primary_Updb) GetRequireSpecialChar() bool {
	if x != nil {
		return x.RequireSpecialChar
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetRequireNumberChar() bool {
	if x != nil {
		return x.RequireNumberChar
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetRequireMixedCase() bool {
	if x != nil {
		return x.RequireMixedCase
	}
	return false
}

func (x *AuthPolicy_Primary_Updb) GetMaxAttempts() int64 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *AuthPolicy_Primary_Updb) GetLockoutDurationMinutes() int64 {
	if x != nil {
		return x.LockoutDurationMinutes
	}
	return 0
}

type AuthPolicy_Primary_ExtJwt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed              bool     `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	AllowAllSigners      bool     `protobuf:"varint,2,opt,name=allowAllSigners,proto3" json:"allowAllSigners,omitempty"`
	AllowedExtJwtSigners []string `protobuf:"bytes,3,rep,name=allowedExtJwtSigners,proto3" json:"allowedExtJwtSigners,omitempty"`
}

func (x *AuthPolicy_Primary_ExtJwt) Reset() {
	*x = AuthPolicy_Primary_ExtJwt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicy_Primary_ExtJwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicy_Primary_ExtJwt) ProtoMessage() {}

func (x *AuthPolicy_Primary_ExtJwt) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicy_Primary_ExtJwt.ProtoReflect.Descriptor instead.
func (*AuthPolicy_Primary_ExtJwt) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{6, 0, 2}
}

func (x *AuthPolicy_Primary_ExtJwt) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthPolicy_Primary_ExtJwt) GetAllowAllSigners() bool {
	if x != nil {
		return x.AllowAllSigners
	}
	return false
}

func (x *AuthPolicy_Primary_ExtJwt) GetAllowedExtJwtSigners() []string {
	if x != nil {
		return x.AllowedExtJwtSigners
	}
	return nil
}

type Ca_ExternalIdClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location        string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Matcher         string `protobuf:"bytes,2,opt,name=matcher,proto3" json:"matcher,omitempty"`
	MatcherCriteria string `protobuf:"bytes,3,opt,name=MatcherCriteria,proto3" json:"MatcherCriteria,omitempty"`
	Parser          string `protobuf:"bytes,4,opt,name=Parser,proto3" json:"Parser,omitempty"`
	ParserCriteria  string `protobuf:"bytes,5,opt,name=ParserCriteria,proto3" json:"ParserCriteria,omitempty"`
	Index           int64  `protobuf:"varint,6,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *Ca_ExternalIdClaim) Reset() {
	*x = Ca_ExternalIdClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edge_cmd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ca_ExternalIdClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ca_ExternalIdClaim) ProtoMessage() {}

func (x *Ca_ExternalIdClaim) ProtoReflect() protoreflect.Message {
	mi := &file_edge_cmd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ca_ExternalIdClaim.ProtoReflect.Descriptor instead.
func (*Ca_ExternalIdClaim) Descriptor() ([]byte, []int) {
	return file_edge_cmd_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Ca_ExternalIdClaim) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetMatcher() string {
	if x != nil {
		return x.Matcher
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetMatcherCriteria() string {
	if x != nil {
		return x.MatcherCriteria
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetParserCriteria() string {
	if x != nil {
		return x.ParserCriteria
	}
	return ""
}

func (x *Ca_ExternalIdClaim) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

var File_edge_cmd_proto protoreflect.FileDescriptor

var file_edge_cmd_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x54,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x66,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x07,
	0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x6e, 0x69, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x07, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x69,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a, 0x73, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x55, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcb, 0x01,
	0x0a, 0x09, 0x4a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x62,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x07, 0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x6e,
	0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x08, 0x6e, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a,
	0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x53, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74,
	0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9f, 0x09, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0xd4, 0x05, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x04, 0x63, 0x65, 0x72,
	0x74, 0x12, 0x3d, 0x0a, 0x04, 0x75, 0x70, 0x64, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x62, 0x52, 0x04, 0x75, 0x70, 0x64, 0x62,
	0x12, 0x43, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x52, 0x06, 0x65,
	0x78, 0x74, 0x4a, 0x77, 0x74, 0x1a, 0x4e, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x43, 0x65, 0x72, 0x74, 0x73, 0x1a, 0xb2, 0x02, 0x0a, 0x04, 0x55, 0x70, 0x64, 0x62, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x4d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4d,
	0x69, 0x78, 0x65, 0x64, 0x43, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x61, 0x73, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x16, 0x4c, 0x6f, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x06, 0x45,
	0x78, 0x74, 0x4a, 0x77, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41,
	0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0x7f, 0x0a,
	0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x6f, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x6f, 0x74, 0x70, 0x12, 0x37, 0x0a, 0x14,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x45, 0x78, 0x74, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x1a, 0x53,
	0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe4, 0x06, 0x0a, 0x02, 0x43, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3c, 0x0a, 0x19,
	0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x61, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x19, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x61, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x69, 0x73,
	0x4f, 0x74, 0x74, 0x43, 0x61, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73,
	0x4f, 0x74, 0x74, 0x43, 0x61, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x7a, 0x69,
	0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x88, 0x01, 0x01, 0x1a, 0xc7, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xb9, 0x02, 0x0a, 0x10, 0x45,
	0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x63, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x64, 0x67, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb5, 0x06, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x41, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6a, 0x77, 0x6b, 0x73, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6a, 0x77, 0x6b, 0x73,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6b,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x0f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x6e,
	0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6a, 0x77, 0x6b, 0x73, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x69, 0x64, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x72, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xc5,
	0x02, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x7a,
	0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e,
	0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x61, 0x6e,
	0x74, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x64,
	0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x1a, 0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x7a, 0x69, 0x74,
	0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6f,
	0x73, 0x74, 0x75, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x53, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x7a, 0x69, 0x74, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x2a, 0x36, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0xe8, 0x07, 0x42, 0x29, 0x5a, 0x27,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x7a,
	0x69, 0x74, 0x69, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_edge_cmd_proto_rawDescOnce sync.Once
	file_edge_cmd_proto_rawDescData = file_edge_cmd_proto_rawDesc
)

func file_edge_cmd_proto_rawDescGZIP() []byte {
	file_edge_cmd_proto_rawDescOnce.Do(func() {
		file_edge_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_edge_cmd_proto_rawDescData)
	})
	return file_edge_cmd_proto_rawDescData
}

var file_edge_cmd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_edge_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_edge_cmd_proto_goTypes = []interface{}{
	(CommandType)(0),                    // 0: ziti.edge_cmd.pb.CommandType
	(*CreateEdgeTerminatorCommand)(nil), // 1: ziti.edge_cmd.pb.CreateEdgeTerminatorCommand
	(*TagValue)(nil),                    // 2: ziti.edge_cmd.pb.TagValue
	(*JsonMap)(nil),                     // 3: ziti.edge_cmd.pb.JsonMap
	(*JsonValue)(nil),                   // 4: ziti.edge_cmd.pb.JsonValue
	(*Config)(nil),                      // 5: ziti.edge_cmd.pb.Config
	(*ConfigType)(nil),                  // 6: ziti.edge_cmd.pb.ConfigType
	(*AuthPolicy)(nil),                  // 7: ziti.edge_cmd.pb.AuthPolicy
	(*Ca)(nil),                          // 8: ziti.edge_cmd.pb.Ca
	(*EdgeRouterPolicy)(nil),            // 9: ziti.edge_cmd.pb.EdgeRouterPolicy
	(*ExternalJwtSigner)(nil),           // 10: ziti.edge_cmd.pb.ExternalJwtSigner
	(*ServiceEdgeRouterPolicy)(nil),     // 11: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy
	(*ServicePolicy)(nil),               // 12: ziti.edge_cmd.pb.ServicePolicy
	nil,                                 // 13: ziti.edge_cmd.pb.JsonMap.ValueEntry
	nil,                                 // 14: ziti.edge_cmd.pb.Config.TagsEntry
	nil,                                 // 15: ziti.edge_cmd.pb.ConfigType.TagsEntry
	(*AuthPolicy_Primary)(nil),          // 16: ziti.edge_cmd.pb.AuthPolicy.Primary
	(*AuthPolicy_Secondary)(nil),        // 17: ziti.edge_cmd.pb.AuthPolicy.Secondary
	nil,                                 // 18: ziti.edge_cmd.pb.AuthPolicy.TagsEntry
	(*AuthPolicy_Primary_Cert)(nil),     // 19: ziti.edge_cmd.pb.AuthPolicy.Primary.Cert
	(*AuthPolicy_Primary_Updb)(nil),     // 20: ziti.edge_cmd.pb.AuthPolicy.Primary.Updb
	(*AuthPolicy_Primary_ExtJwt)(nil),   // 21: ziti.edge_cmd.pb.AuthPolicy.Primary.ExtJwt
	(*Ca_ExternalIdClaim)(nil),          // 22: ziti.edge_cmd.pb.Ca.ExternalIdClaim
	nil,                                 // 23: ziti.edge_cmd.pb.Ca.TagsEntry
	nil,                                 // 24: ziti.edge_cmd.pb.EdgeRouterPolicy.TagsEntry
	nil,                                 // 25: ziti.edge_cmd.pb.ExternalJwtSigner.TagsEntry
	nil,                                 // 26: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.TagsEntry
	nil,                                 // 27: ziti.edge_cmd.pb.ServicePolicy.TagsEntry
	(*timestamppb.Timestamp)(nil),       // 28: google.protobuf.Timestamp
}
var file_edge_cmd_proto_depIdxs = []int32{
	13, // 0: ziti.edge_cmd.pb.JsonMap.value:type_name -> ziti.edge_cmd.pb.JsonMap.ValueEntry
	3,  // 1: ziti.edge_cmd.pb.JsonValue.mapValue:type_name -> ziti.edge_cmd.pb.JsonMap
	3,  // 2: ziti.edge_cmd.pb.Config.data:type_name -> ziti.edge_cmd.pb.JsonMap
	14, // 3: ziti.edge_cmd.pb.Config.tags:type_name -> ziti.edge_cmd.pb.Config.TagsEntry
	3,  // 4: ziti.edge_cmd.pb.ConfigType.schema:type_name -> ziti.edge_cmd.pb.JsonMap
	15, // 5: ziti.edge_cmd.pb.ConfigType.tags:type_name -> ziti.edge_cmd.pb.ConfigType.TagsEntry
	16, // 6: ziti.edge_cmd.pb.AuthPolicy.primary:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary
	17, // 7: ziti.edge_cmd.pb.AuthPolicy.secondary:type_name -> ziti.edge_cmd.pb.AuthPolicy.Secondary
	18, // 8: ziti.edge_cmd.pb.AuthPolicy.tags:type_name -> ziti.edge_cmd.pb.AuthPolicy.TagsEntry
	23, // 9: ziti.edge_cmd.pb.Ca.tags:type_name -> ziti.edge_cmd.pb.Ca.TagsEntry
	22, // 10: ziti.edge_cmd.pb.Ca.externalIdClaim:type_name -> ziti.edge_cmd.pb.Ca.ExternalIdClaim
	24, // 11: ziti.edge_cmd.pb.EdgeRouterPolicy.tags:type_name -> ziti.edge_cmd.pb.EdgeRouterPolicy.TagsEntry
	25, // 12: ziti.edge_cmd.pb.ExternalJwtSigner.tags:type_name -> ziti.edge_cmd.pb.ExternalJwtSigner.TagsEntry
	28, // 13: ziti.edge_cmd.pb.ExternalJwtSigner.notAfter:type_name -> google.protobuf.Timestamp
	28, // 14: ziti.edge_cmd.pb.ExternalJwtSigner.notBefore:type_name -> google.protobuf.Timestamp
	26, // 15: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.tags:type_name -> ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.TagsEntry
	27, // 16: ziti.edge_cmd.pb.ServicePolicy.tags:type_name -> ziti.edge_cmd.pb.ServicePolicy.TagsEntry
	4,  // 17: ziti.edge_cmd.pb.JsonMap.ValueEntry.value:type_name -> ziti.edge_cmd.pb.JsonValue
	2,  // 18: ziti.edge_cmd.pb.Config.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	2,  // 19: ziti.edge_cmd.pb.ConfigType.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	19, // 20: ziti.edge_cmd.pb.AuthPolicy.Primary.cert:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary.Cert
	20, // 21: ziti.edge_cmd.pb.AuthPolicy.Primary.updb:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary.Updb
	21, // 22: ziti.edge_cmd.pb.AuthPolicy.Primary.extJwt:type_name -> ziti.edge_cmd.pb.AuthPolicy.Primary.ExtJwt
	2,  // 23: ziti.edge_cmd.pb.AuthPolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	2,  // 24: ziti.edge_cmd.pb.Ca.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	2,  // 25: ziti.edge_cmd.pb.EdgeRouterPolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	2,  // 26: ziti.edge_cmd.pb.ExternalJwtSigner.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	2,  // 27: ziti.edge_cmd.pb.ServiceEdgeRouterPolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	2,  // 28: ziti.edge_cmd.pb.ServicePolicy.TagsEntry.value:type_name -> ziti.edge_cmd.pb.TagValue
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_edge_cmd_proto_init() }
func file_edge_cmd_proto_init() {
	if File_edge_cmd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_edge_cmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEdgeTerminatorCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ca); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeRouterPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalJwtSigner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceEdgeRouterPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Secondary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary_Cert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary_Updb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicy_Primary_ExtJwt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edge_cmd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ca_ExternalIdClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_edge_cmd_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TagValue_BoolValue)(nil),
		(*TagValue_StringValue)(nil),
		(*TagValue_FpValue)(nil),
		(*TagValue_NilValue)(nil),
	}
	file_edge_cmd_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*JsonValue_BoolValue)(nil),
		(*JsonValue_StringValue)(nil),
		(*JsonValue_FpValue)(nil),
		(*JsonValue_NilValue)(nil),
		(*JsonValue_MapValue)(nil),
	}
	file_edge_cmd_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_edge_cmd_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edge_cmd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_edge_cmd_proto_goTypes,
		DependencyIndexes: file_edge_cmd_proto_depIdxs,
		EnumInfos:         file_edge_cmd_proto_enumTypes,
		MessageInfos:      file_edge_cmd_proto_msgTypes,
	}.Build()
	File_edge_cmd_proto = out.File
	file_edge_cmd_proto_rawDesc = nil
	file_edge_cmd_proto_goTypes = nil
	file_edge_cmd_proto_depIdxs = nil
}
